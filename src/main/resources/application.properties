# Standard webapp properties
server.servlet.contextPath=/authoring-services
server.port=8081
spring.security.user.name=user
spring.security.user.password=password

# Login and security
ims.url=https://localhost/
securityServiceStubMode=false
# Providing a value here enables SSO security
ims-security.required-role=
# Can be used to configure static SSO values for dev rather than using Nginx
authentication.override.username=
authentication.override.roles=
authentication.override.token=

# Jira for workflow
jira.url=http://localhost/
jira.username=
jira.password=
jira.consumerKey=
jira.privateKeyName=jiraKey.pem
jira.groupName=
jiraProjectFilterProductCodes=Int

snowstorm.url=http://localhost:8080/snowstorm/

# Queue containing the status of a classification from snowstorm. Blank by default for backward compatibility.
classification.status.queue=

# Authoring Acceptance Gateway - for forwarding validation status updates
aag.url=

# AWS Cloud Credentials
# Instance Profile uses the credentials of the AWS instance
cloud.aws.credentials.instanceProfile=true

# Don't try to discover AWS stack information
cloud.aws.stack.auto=false
cloud.aws.region.static=us-east-1

# Storage configuration for UI state information
ui-state.storage.readonly=false
ui-state.storage.local.path=store/ui-states
ui-state.storage.useCloud=false
ui-state.storage.cloud.bucketName=
ui-state.storage.cloud.path=

# JMS
# Default is already localhost vm broker
#spring.activemq.broker-url=
spring.activemq.user=
spring.activemq.password=
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Task state change notification queues.
# A JMS message will be sent to each queue every time an authoring task state is changed by this service.
# An example consumer of this information is the Content Request Service.
# Comma separated list of queue names.
task-state-change.notification-queues=

# Task Review database data source
spring.datasource.url=jdbc:mysql://localhost:3306/ts_review?useSSL=false
spring.datasource.username=local
spring.datasource.password=

aws.resources.enabled=false
aws.key=blank
aws.secretKey=blank
aws.s3.spell-check.bucket=validation-resources.ihtsdo
aws.s3.spell-check.path=dev/international/spelling-dictionary.txt
aws.s3.dialect.us-to-gb-map.path=dev/international/us-to-gb-terms-map.txt
aws.s3.dialect.us-to-gb-synonyms-map.path=dev/international/us-to-gb-synonyms-map.txt
aws.s3.technical-issue-items.path=dev/international/technical-issue-items.txt
aws.s3.semantic-tag-items.path=dev/international/semantic-tags.txt

snomed.loinc.moduleId=715515008
snomed.loinc.termToExpressionRefsetId=705110001
snomed.loinc.codeSystemConceptId=705114005
snomed.loinc.originallyInLoincConceptId=705117003

ui-configuration.endpoints.loaded=true
ui-configuration.features.example=true

# Auto rebase config
scheduled.rebase.project.cron=0 0 5 * * *
auto.rebase.username=
auto.rebase.password=

# Spring email configurations
spring.mail.host=
spring.mail.port=
spring.mail.username=
spring.mail.password=

# Thymeleaf configurations
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=true

email.link.platform.url=http://localhost/
email.user.from=no-reply

# Handles X-Forwarded-XXX headers
server.forward-headers-strategy=FRAMEWORK

# Allows spring and eleasticsearch to be circularly dependent.
spring.main.allow-circular-references=true

# Allows spring to use the full classpath for scanning.
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# ----------------------------------------
# Logging
#   Available logging levels are DEBUG, INFO, WARN, ERROR or FATAL.
# ----------------------------------------

# Authoring Services logging level.
logging.level.org.ihtsdo.authoringservices=INFO

# Spring logging level.
logging.level.org.springframework=INFO
logging.level.org.springframework.web=INFO


# Root logging level (everything else).
logging.level.root=INFO


# ----------------------------------------
# Caching
# ----------------------------------------

# Cache names
spring.cache.cache-names=classification-status

# RVF validation config
rvf.url=http://localhost:8080/api/

# Release Notes config
release-notes.url= http://localhost:8080/release-notes-service/

# AP build job message queue
sca.jms.queue.prefix = local-sca
srs.jms.queue.prefix = local-srs

# CRS config
crs.url=http://localhost:8080/ihtsdo-crs/api/

# RVF Jira configuration
rvf.jira.url=
rvf.jira.consumerKey=
rvf.jira.privateKeyName=
rvf.jira.ticket.watcher=
rvf.jira.ticket.priority=

# Daily build storage config
dailybuild.storage.cloud.bucketName =
dailybuild.storage.cloud.path =

# ----------------------------------------
# Springdoc Swagger Config
# ----------------------------------------
# To completely hide the schemas section
springdoc.swagger-ui.defaultModelsExpandDepth=-1
# Sort by tag
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
# Hide doc expansion
springdoc.swagger-ui.docExpansion=none
# Enable tryout by default
springdoc.swagger-ui.tryItOutEnabled=true
# Disable generic response
springdoc.override-with-generic-response=false
# Expose spring-boot-actuator endpoints
springdoc.show-actuator=true
springdoc.swagger-ui.groups-order=desc

# ----------------------------------------
# Spring cloud consul config
# ----------------------------------------
spring.cloud.consul.enabled=false
#spring.cloud.consul.config.prefix=consul
#spring.application.name=authoring-services
#spring.cloud.consul.discovery.healthCheckPath=/authoring-services/version
#spring.cloud.consul.config.profile-separator=/
#spring.config.import=consul:localhost:8500

# ----------------------------------------
# Spring vault config
# ----------------------------------------
spring.cloud.vault.enabled=false
#spring.cloud.vault.token=00000000-0000-0000-0000-000000000000
#spring.cloud.vault.scheme=http
#spring.cloud.vault.kv.enabled=true
#spring.config.import=consul:localhost:8500,vault://


