ims.url=https://localhost/
jira.url=http://localhost/
# Used to fetch custom fields
jira.username=
jira.password=
jira.consumerKey=
jira.privateKeyName=
jira.groupName=
jiraProjectFilterProductCodes=Int

securityServiceStubMode=false

snowowl.url=http://localhost:8080/snowowl/
snowowl.reasonerId=org.semanticweb.elk.owlapi.ElkReasonerFactory
snowowl.useExternalClassificationService=true

orchestration.url=http://localhost/
orchestration.username=
orchestration.password=
orchestration.name=int

server.context-path=/authoring-services
server.port=8081
security.user.name=user
security.user.password=password

# Providing a value here enables SSO security
ims-security.required-role=

# Can be used to configure static SSO values for dev rather than using Nginx
authentication.override.username=
authentication.override.roles=
authentication.override.token=

spring.datasource.url=jdbc:mysql://localhost:3306/ts_review?useSSL=false
spring.datasource.username=local
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#spring.activemq.broker-url=
spring.activemq.user=
spring.activemq.password=
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

aws.key = blank
aws.secretKey = blank
aws.s3.spell-check.bucket = validation-resources.ihtsdo
aws.s3.spell-check.path = dev/international/spelling-dictionary.txt
aws.s3.dialect.us-to-gb-map.path = dev/international/us-to-gb-terms-map.txt
aws.s3.dialect.us-to-gb-synonyms-map.path = dev/international/us-to-gb-synonyms-map.txt

snomed.loinc.moduleId=715515008
snomed.loinc.termToExpressionRefsetId=705110001
snomed.loinc.codeSystemConceptId=705114005
snomed.loinc.originallyInLoincConceptId=705117003

uiConfiguration.endpoints.loaded=true
uiConfiguration.features.example=true

scheduled.rebase.project.cron=0 0 5 ? * *