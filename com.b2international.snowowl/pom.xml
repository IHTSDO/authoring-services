<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.b2international.snowowl</groupId>
	<artifactId>com.b2international.snowowl</artifactId>
	<version>3.9.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<tycho.version>0.21.0</tycho.version>
		<tycho-extras.version>0.21.0</tycho-extras.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<xtend.compiler.version>2.6.2</xtend.compiler.version>
		<groovy.compiler.version>2.8.0-01</groovy.compiler.version>
		<groovy.batch.version>2.1.8-01</groovy.batch.version>
		<!-- Releng sites, NOTE: for local builds, change the webserver.context
			property to match your platforms directory structure -->
		<webserver.context>/var/www</webserver.context>
		<repository.name>${p2_repository}</repository.name>
		<update.site>composite</update.site>
		<repository.path>updates/${update.site}/${repository.name}/</repository.path>
		<download.publish.path>${webserver.context}/${repository.path}</download.publish.path>
		<baseline.repository>http://${buildServer}/${repository.path}</baseline.repository>
		<!-- Jacoco properties -->
		<jacoco.version>0.6.3.201306030806</jacoco.version>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
		<!-- Sonar properties -->
		<sonar.version>3.5</sonar.version>
		<!-- Default Release Name from build to build will be the actual build
			ID, and when releasing this ID replaced by the actual release name -->
		<build.release.name>B${BUILD_NUMBER}</build.release.name>
		<build.version>${unqualifiedVersion}.${maven.build.timestamp}</build.version>
		<!-- forcing context qualifier in all builds -->
		<forceContextQualifier>${maven.build.timestamp}</forceContextQualifier>
		<hal.url>ftp://${hal.username.pass}@hal:</hal.url>
		<snowowl.release.name>DEV</snowowl.release.name>
		<snowowl.release.repository>dev</snowowl.release.repository>
		<snowowl.version>3.9.0</snowowl.version>
		<target.platform.version>3.8.0</target.platform.version>
		<thirdparty.target.version>3.8.0</thirdparty.target.version>
		<!-- Deployment properties -->
		<storage.loc>/mnt/hal</storage.loc>
		<base.resource.path>${storage.loc}/snowowl/resources</base.resource.path>
		<h2.resource.path>${base.resource.path}/h2/sg</h2.resource.path>
		<mysql.resource.path>${base.resource.path}/mysql/sg</mysql.resource.path>
		<latest.resource.path>${h2.resource.path}</latest.resource.path>
		<user.password>${server.username.pass}</user.password>
		<deployment.folder>/opt</deployment.folder>
		<default.server>jekyll</default.server>
		<deployment.location>scp://${user.password}@${default.server}:${deployment.folder}</deployment.location>
		<datastore.file.prefix>resources</datastore.file.prefix>
		<equinox.output.prefix>snowowlserver</equinox.output.prefix>
		<products.directory>${project.build.directory}/products</products.directory>
		<feature_sites>${target.platform.repository},${baseline.repository}</feature_sites>
		<virgo.output.prefix>${equinox.output.prefix}_virgo</virgo.output.prefix>
		<virgo.h2.output.prefix>${virgo.output.prefix}_h2</virgo.h2.output.prefix>
		<virgo.mysql.output.prefix>${virgo.output.prefix}_mysql</virgo.mysql.output.prefix>
		<mysql.config.dir>${storage.loc}/snowowl/mysql_config</mysql.config.dir>
		<sonar.skippedModules>
			org.eclipse.equinox.preferences,com.b2international.opal,org.apache.lucene,com.b2international.org.eclipse.net4j.db.h2,com.b2international.org.eclipse.net4j.db.mysql,org.eclipse.net4j,org.eclipse.net4j.util,org.eclipse.emf.cdo,org.eclipse.emf.cdo.common,org.eclipse.emf.cdo.net4j,org.eclipse.emf.cdo.server.net4j,org.eclipse.emf.cdo.server,org.eclipse.emf.cdo.server.db,org.eclipse.ui.intro,org.protege.common,org.protege.core.feature,org.protege.editor.core.application,org.protege.editor.owl,org.semanticweb.owl.owlapi,org.supercsv,org.github.avatar.ui,org.jsr-305,org.eclipse.swt.win32.win32.x86_64
		</sonar.skippedModules>
		<target.platform.repository>http://jenkins/updates/dependencies/target_platform_${target.platform.version}</target.platform.repository>
	</properties>

	<pluginRepositories>
		<pluginRepository>
			<id>xtend</id>
			<url>http://build.eclipse.org/common/xtend/maven/</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho.version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<configuration>
					<strictBinIncludes>false</strictBinIncludes>
					<strictVersions>false</strictVersions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<resolver>p2</resolver>
					<filters>
						<!-- work around Equinox bug 348045 -->
						<!-- Removes the extension bundle from the available bundles for the
							javax.servlet package -->
						<filter>
							<type>java-package</type>
							<id>javax.servlet</id>
							<restrictTo>
								<type>osgi-bundle</type>
								<id>javax.servlet</id>
								<versionRange>[2.6.0,3.1.0)</versionRange>
							</restrictTo>
						</filter>
						<filter>
							<type>eclipse-plugin</type>
							<id>org.codehaus.groovy</id>
							<restrictTo>
								<versionRange>[2.0.0,2.1.0)</versionRange>
							</restrictTo>
						</filter>
						<!-- Remove RAP -->
						<filter>
							<type>p2-installable-unit</type>
							<id>org.eclipse.rap.rwt</id>
							<removeAll />
						</filter>
						<filter>
							<type>p2-installable-unit</type>
							<id>org.eclipse.rap.ui</id>
							<removeAll />
						</filter>
						<filter>
							<type>p2-installable-unit</type>
							<id>org.eclipse.rap.jface.databinding</id>
							<removeAll />
						</filter>
						<filter>
							<type>p2-installable-unit</type>
							<id>org.eclipse.rap.jface</id>
							<removeAll />
						</filter>
						<filter>
							<type>p2-installable-unit</type>
							<id>org.eclipse.rap.ui.forms</id>
							<removeAll />
						</filter>
						<filter>
							<type>p2-installable-unit</type>
							<id>org.eclipse.rap.ui.workbench</id>
							<removeAll />
						</filter>
						<filter>
							<type>p2-installable-unit</type>
							<id>org.eclipse.rap.ui.views</id>
							<removeAll />
						</filter>
					</filters>
					<environments>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<version>${tycho.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.plexus</groupId>
						<artifactId>plexus-archiver</artifactId>
						<version>2.4.4</version>
						<exclusions>
							<exclusion>
								<groupId>org.codehaus.plexus</groupId>
								<artifactId>plexus-component-api</artifactId>
							</exclusion>
							<exclusion>
								<groupId>org.codehaus.plexus</groupId>
								<artifactId>plexus-container-default</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-publisher-plugin</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<publishArtifacts>true</publishArtifacts>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-plugin</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<baselineMode>fail</baselineMode>
					<baselineReplace>none</baselineReplace>
					<baselineRepositories>
						<repository>
							<url>${baseline.repository}</url>
						</repository>
					</baselineRepositories>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-compiler-plugin</artifactId>
					<version>${tycho.version}</version>
					<configuration>
						<excludeResources>
							<excludeResource>**/*.groovy</excludeResource>
							<excludeResource>**/*.xtend</excludeResource>
						</excludeResources>
					</configuration>
				</plugin>
				<!-- Maven compiler plugin definition needed for Groovy compiler -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-surefire-plugin</artifactId>
					<version>${tycho.version}</version>
					<configuration>
						<failIfNoTests>false</failIfNoTests>
						<useUIHarness>false</useUIHarness>
						<includes>
							<include>**/*Tests.java</include>
						</includes>
						<!-- Kill test JVM if tests take more than 10 minutes (600 seconds)
							to finish -->
						<forkedProcessTimeoutInSeconds>600</forkedProcessTimeoutInSeconds>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-packaging-plugin</artifactId>
					<version>${tycho.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.eclipse.tycho.extras</groupId>
							<artifactId>tycho-buildtimestamp-jgit</artifactId>
							<version>${tycho-extras.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<timestampProvider>jgit</timestampProvider>
						<jgit.ignore>
							pom.xml
						</jgit.ignore>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.sonar</groupId>
					<artifactId>sonar-maven3-plugin</artifactId>
					<version>${sonar.version}</version>
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>5.1.21</version>
						</dependency>
					</dependencies>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.eclipse.tycho
										</groupId>
										<artifactId>
											tycho-packaging-plugin
										</artifactId>
										<versionRange>
											[0.18.1,)
										</versionRange>
										<goals>
											<goal>
												build-qualifier-aggregator
											</goal>
											<goal>validate-id</goal>
											<goal>build-qualifier</goal>
											<goal>
												validate-version
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-clean-plugin
										</artifactId>
										<versionRange>
											[2.4.1,)
										</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.eclipse.tycho
										</groupId>
										<artifactId>
											tycho-compiler-plugin
										</artifactId>
										<versionRange>
											[0.20.0,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho.extras</groupId>
					<artifactId>tycho-eclipserun-plugin</artifactId>
					<version>${tycho-extras.version}</version>
					<configuration>
						<argLine>-Declipse.p2.mirrors=false -Dsun.net.client.defaultReadTimeout=30000</argLine>
						<dependencies>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.transport.ecf</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.repository</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.touchpoint.natives</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.touchpoint.eclipse</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.artifact.repository
								</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.director.app</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.publisher</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.p2.publisher.eclipse</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.equinox.ds</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
							<dependency>
								<artifactId>org.eclipse.core.net</artifactId>
								<type>eclipse-plugin</type>
							</dependency>
						</dependencies>
						<repositories>
							<repository>
								<id>tp</id>
								<url>${target.platform.repository}</url>
								<layout>p2</layout>
							</repository>
						</repositories>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	  	<extensions>
	   		<!-- Enabling the use of Wagon file -->
	        <extension>
	        	<groupId>org.apache.maven.wagon</groupId>
	            <artifactId>wagon-file</artifactId>
	            <version>1.0-beta-6</version>
	        </extension>
	   	</extensions>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
      		<id>win</id>
      		<activation>
      			<os><family>windows</family></os>
      		</activation>
      		<properties>
      			<storage.loc>z:/</storage.loc>
      		</properties>
    	</profile>
		<profile>
			<id>coverage</id>
			<activation>
				<property>
					<name>coverage</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- Where to put jacoco coverage report -->
							<destFile>${sonar.jacoco.reportPath}</destFile>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>target_platform</id>
			<repositories>
				<repository>
					<id>snowowl_target_platform</id>
					<name>Snow Owl Target Platform Site</name>
					<url>${target.platform.repository}</url>
					<layout>p2</layout>
				</repository>
			</repositories>
		</profile>
		<profile>
			<id>releaseQualifier</id>
			<activation>
				<property>
					<name>release</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<forceContextQualifier>${snowowl.release.name}_${maven.build.timestamp}</forceContextQualifier>
				<repository.name>releases/${snowowl.release.repository}</repository.name>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-p2-plugin</artifactId>
						<version>${tycho.version}</version>
						<configuration>
							<baselineMode>disable</baselineMode>
							<baselineReplace>none</baselineReplace>
							<baselineRepositories>
								<repository>
									<url>${baseline.repository}</url>
								</repository>
							</baselineRepositories>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>milestoneQualifier</id>
			<activation>
				<property>
					<name>milestone</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<milestone.number>1</milestone.number>
				<forceContextQualifier>M${milestone.number}_${snowowl.release.name}_${maven.build.timestamp}</forceContextQualifier>
				<repository.name>milestones/${snowowl.release.repository}</repository.name>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-p2-plugin</artifactId>
						<version>${tycho.version}</version>
						<configuration>
							<baselineMode>disable</baselineMode>
							<baselineReplace>none</baselineReplace>
							<baselineRepositories>
								<repository>
									<url>${baseline.repository}</url>
								</repository>
							</baselineRepositories>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>clean</id>
			<activation>
				<property>
					<name>clean_repository</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-p2-plugin</artifactId>
						<version>${tycho.version}</version>
						<configuration>
							<baselineMode>disable</baselineMode>
							<baselineReplace>none</baselineReplace>
							<baselineRepositories>
								<repository>
									<url>${baseline.repository}</url>
								</repository>
							</baselineRepositories>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>maintenance</id>
			<properties>
				<forceContextQualifier>${snowowl.release.name}_${maven.build.timestamp}</forceContextQualifier>
				<repository.name>maintenance/${snowowl.release.repository}</repository.name>
			</properties>
		</profile>
		<profile>
			<id>version_bump</id>
			<modules>
				<module>../com.b2international.snowowl.p2.build</module>
				<module>../com.b2international.snowowl.client.build</module>
				<module>../com.b2international.snowowl.server.build</module>
				<module>../com.b2international.snowowl.server</module>
				<module>../com.b2international.snowowl.test</module>
				<module>../com.b2international.snowowl.licensegenerator</module>
			</modules>
		</profile>
		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>release</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<dataset.path>/storage/dataset/latest/</dataset.path>
				<java.runtime.path>/storage/java/jre7/</java.runtime.path>
				<build.release.name>${snowowl.release.name}</build.release.name>
			</properties>
		</profile>
		<profile>
			<id>maven.skip.install</id>
			<activation>
				<property>
					<name>maven.skip.install</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-install-plugin</artifactId>
						<version>2.5.1</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<distributionManagement>
		<repository>
			<id>nexus_deployment</id>
			<url>http://jenkins:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus_deployment</id>
			<url>http://jenkins:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

</project>
