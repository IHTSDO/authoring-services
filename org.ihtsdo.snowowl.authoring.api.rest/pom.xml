<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ihtsdo.snowowl</groupId>
		<artifactId>ihtsdo-snowowl-parent</artifactId>
		<version>4.1.3</version>
	</parent>

	<artifactId>org.ihtsdo.snowowl.authoring.api.rest</artifactId>

	<properties>
		<!-- manifest properties -->
    	<bundle.symbolicName>${project.artifactId};singleton:=true</bundle.symbolicName>
    	<bundle.namespace>${project.artifactId}</bundle.namespace>
    	<bundle.webcontext>/snowowl/ihtsdo-authoring</bundle.webcontext>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.ihtsdo.snowowl</groupId>
			<artifactId>org.ihtsdo.snowowl.api.rest.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Plug-in dependencies are repeated here so that the build can resolve
			them at compile time -->
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.api</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.api</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.api.impl</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.api.impl</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.refset.model</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.datastore</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.core</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.common</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.datastore</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.model</artifactId>
			<version>${snowowl.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.b2international.snowowl</groupId>
			<artifactId>com.b2international.snowowl.snomed.api.rest</artifactId>
			<version>${snowowl.version}</version>
			<!-- TODO - make the b2i rest module export it's classes so the scope here may be 'provided'-->
		</dependency>

		<!-- The Servlet specification is implemented by the web container -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Regular Maven dependencies -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>15.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-guava</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-scala_2.10</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
			<version>${spring.hateoas.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.10.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>4.10.2</version>
		</dependency>
		<dependency>
			<groupId>net.rcarz</groupId>
			<artifactId>jira-client</artifactId>
			<version>0.5</version>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.10</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-qualifier</id>
						<phase>validate</phase>
						<goals>
							<goal>build-qualifier</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<file>${project.build.directory}/generated/MANIFEST.MF</file>
					<outputFile>${project.build.directory}/manifest/MANIFEST.MF</outputFile>
					<regex>true</regex>
					<token>Bundle-Version: .*\.qualifier</token>
					<value>Bundle-Version: ${unqualifiedVersion}.${buildQualifier}</value>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<outputDirectory>${project.build.directory}/plain-jar</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>create-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>

							<classesDirectory>${project.build.directory}/classes</classesDirectory>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<archive>
								<manifestFile>${project.build.directory}/manifest/MANIFEST.MF</manifestFile>
							</archive>

						</configuration>
					</execution>
				</executions>
			</plugin>
		<!-- Generate Manifest -->
			<plugin>
	        <groupId>org.apache.felix</groupId>
	        <artifactId>maven-bundle-plugin</artifactId>
        	<version>2.5.3</version>
        	<dependencies>
	          <dependency>
	            <groupId>biz.aQute.bnd</groupId>
	            <artifactId>bndlib</artifactId>
	            <version>2.4.0</version>
	          </dependency>
	        </dependencies>
	        <executions>
	          <execution>
	            <id>bundle-manifest</id>
	            <phase>process-classes</phase>
	            <goals>
	              <goal>manifest</goal>
	            </goals>
	          </execution>
	        </executions>
	        <configuration>
	          <supportedProjectTypes>
	          	<supportedProjectType>jar</supportedProjectType>
	          </supportedProjectTypes>
              <manifestLocation>${project.build.directory}/generated/</manifestLocation>

	          <instructions>
	          	<Build-Name>IHTSDO Snow Owl REST Authoring Service</Build-Name>
	            <Bundle-SymbolicName>${project.artifactId};singleton:=true</Bundle-SymbolicName>
	            <Bundle-Version>1.0.0.qualifier</Bundle-Version>
	            <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                <Bundle-ClassPath>.,WEB-INF/classes,{maven-dependencies}</Bundle-ClassPath>
                <Embed-Directory>WEB-INF/lib</Embed-Directory>
    			<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
    			<Embed-Transitive>true</Embed-Transitive>
                <Web-ContextPath>${bundle.webcontext}</Web-ContextPath>
                <!-- this plugin automatically replaces full packages by scanning import statements in classes.
                However package configured in spring bean classes and not used as import within java classes needs to mention separately
                hence com.b2international.snowowl.api.impl etc -->
    			<Import-Package>*;resolution:=optional,
					com.b2international.snowowl.api.impl,
					com.b2international.snowowl.api.impl.codesystem,
					com.b2international.snowowl.snomed.api.impl.browser,
					org.slf4j;version="1.7.2",
					org.eclipse.core.runtime;version="3.4.0",
					org.osgi.framework;version="1.7.0",
			 	</Import-Package>
   	          </instructions>
	        </configuration>
	      </plugin>
	      <plugin>
	           <groupId>org.apache.maven.plugins</groupId>
	           <artifactId>maven-dependency-plugin</artifactId>
	           <executions>
	               <execution>
	                   <id>copy-dependencies</id>
					   <phase>process-resources</phase>
	                   <goals>
	                       <goal>copy-dependencies</goal>
	                   </goals>
	                   <configuration>
	                       <outputDirectory>${project.build.directory}/classes/WEB-INF/lib</outputDirectory>
	                       <overWriteReleases>false</overWriteReleases>
	                       <overWriteSnapshots>false</overWriteSnapshots>
	                       <overWriteIfNewer>true</overWriteIfNewer>
	                       <excludeScope>provided</excludeScope>
	                   </configuration>
	               </execution>
	           </executions>
	       </plugin>
		</plugins>
	</build>

</project>
